// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PodLabs.Core;

namespace PodLabs.Core.Migrations
{
    [DbContext(typeof(PodLabsContext))]
    [Migration("20200107210717_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PodLabs.Core.Classes.Local.Tracker", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint");

                    b.Property<ulong>("IsAlliance")
                        .HasColumnName("IsAlliance")
                        .HasColumnType("bit");

                    b.Property<long>("TrackerId")
                        .HasColumnName("TrackerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Trackers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsAlliance = 0ul,
                            TrackerId = 98614694L
                        },
                        new
                        {
                            Id = 2L,
                            IsAlliance = 1ul,
                            TrackerId = 99007237L
                        },
                        new
                        {
                            Id = 3L,
                            IsAlliance = 1ul,
                            TrackerId = 99003144L
                        },
                        new
                        {
                            Id = 4L,
                            IsAlliance = 1ul,
                            TrackerId = 99009583L
                        },
                        new
                        {
                            Id = 5L,
                            IsAlliance = 1ul,
                            TrackerId = 99006113L
                        },
                        new
                        {
                            Id = 6L,
                            IsAlliance = 1ul,
                            TrackerId = 99006319L
                        },
                        new
                        {
                            Id = 7L,
                            IsAlliance = 1ul,
                            TrackerId = 99007192L
                        },
                        new
                        {
                            Id = 8L,
                            IsAlliance = 1ul,
                            TrackerId = 99006117L
                        });
                });

            modelBuilder.Entity("PodLabs.Core.Classes.Swagger.Alliance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("AllianceId")
                        .HasColumnName("AllianceId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatorCorporationId")
                        .HasColumnName("CreatorCorporationId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatorId")
                        .HasColumnName("CreatorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateFounded")
                        .HasColumnName("DateFounded")
                        .HasColumnType("datetime(6)");

                    b.Property<long?>("ExecutorCorporationId")
                        .HasColumnName("ExecutorCorporationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FactionId")
                        .HasColumnName("FactionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Ticker")
                        .HasColumnName("Ticker")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Alliances");
                });

            modelBuilder.Entity("PodLabs.Core.Classes.Swagger.Corporation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("AllianceId")
                        .HasColumnName("AllianceId")
                        .HasColumnType("bigint");

                    b.Property<long>("CeoId")
                        .HasColumnName("CeoId")
                        .HasColumnType("bigint");

                    b.Property<long>("CorporationId")
                        .HasColumnName("CorporationId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatorId")
                        .HasColumnName("CreatorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateFounded")
                        .HasColumnName("DateFounded")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long?>("FactionId")
                        .HasColumnName("FactionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("HomeStationId")
                        .HasColumnName("HomeStationId")
                        .HasColumnType("bigint");

                    b.Property<long>("MemberCount")
                        .HasColumnName("MemberCount")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long?>("Shares")
                        .HasColumnName("Shares")
                        .HasColumnType("bigint");

                    b.Property<double>("TaxRate")
                        .HasColumnName("TaxRate")
                        .HasColumnType("double");

                    b.Property<string>("Ticker")
                        .HasColumnName("Ticker")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Url")
                        .HasColumnName("Url")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<ulong?>("WarEligible")
                        .HasColumnName("WarEligible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Corporations");
                });

            modelBuilder.Entity("PodLabs.Core.Classes.zKillboard.Attacker", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("AllianceId")
                        .HasColumnName("AllianceId")
                        .HasColumnType("bigint");

                    b.Property<long>("CharacterId")
                        .HasColumnName("CharacterId")
                        .HasColumnType("bigint");

                    b.Property<long>("CorporationId")
                        .HasColumnName("CorporationId")
                        .HasColumnType("bigint");

                    b.Property<long>("DamageDone")
                        .HasColumnName("DamageDone")
                        .HasColumnType("bigint");

                    b.Property<long>("FactionId")
                        .HasColumnName("FactionId")
                        .HasColumnType("bigint");

                    b.Property<ulong>("FinalBlow")
                        .HasColumnName("FinalBlow")
                        .HasColumnType("bit");

                    b.Property<long?>("KillmailId")
                        .HasColumnType("bigint");

                    b.Property<float>("SecurityStatus")
                        .HasColumnName("SecurityStatus")
                        .HasColumnType("float");

                    b.Property<long>("ShipTypeId")
                        .HasColumnName("ShipTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("WeaponTypeId")
                        .HasColumnName("WeaponTypeID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("KillmailId");

                    b.ToTable("Attacker");
                });

            modelBuilder.Entity("PodLabs.Core.Classes.zKillboard.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("Flag")
                        .HasColumnName("Flag")
                        .HasColumnType("int");

                    b.Property<int>("ItemTypeId")
                        .HasColumnName("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<long?>("QuantityDestroyed")
                        .HasColumnName("QuantityDestroyed")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuantityDropped")
                        .HasColumnName("QuantityDropped")
                        .HasColumnType("bigint");

                    b.Property<int>("Singleton")
                        .HasColumnName("Singleton")
                        .HasColumnType("int");

                    b.Property<long?>("VictimId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VictimId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("PodLabs.Core.Classes.zKillboard.Killmail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("KillmailId")
                        .HasColumnName("KillmailId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("KillmailTime")
                        .HasColumnName("KillmailTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("SolarSystemId")
                        .HasColumnName("SolarSystemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("VictimId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ZkbId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VictimId");

                    b.HasIndex("ZkbId");

                    b.ToTable("Killmails");
                });

            modelBuilder.Entity("PodLabs.Core.Classes.zKillboard.Position", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint");

                    b.Property<float>("X")
                        .HasColumnName("X")
                        .HasColumnType("float");

                    b.Property<float>("Y")
                        .HasColumnName("Y")
                        .HasColumnType("float");

                    b.Property<float>("Z")
                        .HasColumnName("Z")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("PodLabs.Core.Classes.zKillboard.Victim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("AllianceId")
                        .HasColumnName("AllianceId")
                        .HasColumnType("bigint");

                    b.Property<long>("CharacterId")
                        .HasColumnName("CharacterId")
                        .HasColumnType("bigint");

                    b.Property<long>("CorporationId")
                        .HasColumnName("CorporationId")
                        .HasColumnType("bigint");

                    b.Property<long>("DamageTaken")
                        .HasColumnName("DamageTaken")
                        .HasColumnType("bigint");

                    b.Property<long?>("PositionId")
                        .HasColumnType("bigint");

                    b.Property<long>("ShipTypeId")
                        .HasColumnName("ShipTypeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Victim");
                });

            modelBuilder.Entity("PodLabs.Core.Classes.zKillboard.Zkb", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint");

                    b.Property<ulong>("Awox")
                        .HasColumnName("Awox")
                        .HasColumnType("bit");

                    b.Property<string>("Esi")
                        .HasColumnName("Esi")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("FittedValue")
                        .HasColumnName("FittedValue")
                        .HasColumnType("double");

                    b.Property<string>("Hash")
                        .HasColumnName("Hash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("LocationId")
                        .HasColumnName("LocationId")
                        .HasColumnType("bigint");

                    b.Property<ulong>("NPC")
                        .HasColumnName("NPC")
                        .HasColumnType("bit");

                    b.Property<int>("Points")
                        .HasColumnName("Points")
                        .HasColumnType("int");

                    b.Property<ulong>("Solo")
                        .HasColumnName("Solo")
                        .HasColumnType("bit");

                    b.Property<double>("TotalValue")
                        .HasColumnName("TotalValue")
                        .HasColumnType("double");

                    b.Property<string>("Url")
                        .HasColumnName("Url")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Zkb");
                });

            modelBuilder.Entity("PodLabs.Core.Classes.zKillboard.Attacker", b =>
                {
                    b.HasOne("PodLabs.Core.Classes.zKillboard.Killmail", null)
                        .WithMany("Attackers")
                        .HasForeignKey("KillmailId");
                });

            modelBuilder.Entity("PodLabs.Core.Classes.zKillboard.Item", b =>
                {
                    b.HasOne("PodLabs.Core.Classes.zKillboard.Victim", null)
                        .WithMany("Items")
                        .HasForeignKey("VictimId");
                });

            modelBuilder.Entity("PodLabs.Core.Classes.zKillboard.Killmail", b =>
                {
                    b.HasOne("PodLabs.Core.Classes.zKillboard.Victim", "Victim")
                        .WithMany()
                        .HasForeignKey("VictimId");

                    b.HasOne("PodLabs.Core.Classes.zKillboard.Zkb", "Zkb")
                        .WithMany()
                        .HasForeignKey("ZkbId");
                });

            modelBuilder.Entity("PodLabs.Core.Classes.zKillboard.Victim", b =>
                {
                    b.HasOne("PodLabs.Core.Classes.zKillboard.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");
                });
#pragma warning restore 612, 618
        }
    }
}
